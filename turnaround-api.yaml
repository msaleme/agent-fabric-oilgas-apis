openapi: 3.1.0
info:
  title: Turnaround Planning API
  version: 1.0.0
  description: >
    Coordinates planning, workforce, procurement, and finance during refinery
    turnarounds with full governance and observability.
servers:
  - url: https://api.example.com/turnarounds/v1
tags:
  - name: Health
  - name: Turnarounds
  - name: Tasks
  - name: Compliance
security:
  - oauth2: [turnaround:plan, turnaround:execute, turnaround:monitor, turnaround:report]
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth.example.com/oauth/token
          scopes:
            turnaround:plan: Plan turnaround activities
            turnaround:execute: Execute turnaround tasks
            turnaround:monitor: Monitor turnaround progress
            turnaround:report: Generate turnaround reports
  parameters:
    TurnaroundIdParam:
      name: id
      in: path
      required: true
      schema: { type: string }
  headers:
    X-Correlation-Id:
      description: Correlates requests across the Agent Fabric
      schema:
        type: string
    X-RateLimit-Remaining:
      description: Number of requests remaining in current window
      schema:
        type: integer
    X-Total-Count:
      description: Total number of items (for paginated responses)
      schema:
        type: integer
  schemas:
    Turnaround:
      type: object
      properties:
        id: { type: string, readOnly: true }
        name: { type: string }
        scope: { type: string }
        plannedStart: { type: string, format: date-time }
        plannedEnd: { type: string, format: date-time }
        status: { type: string, enum: ["PLANNED", "ACTIVE", "COMPLETE"] }
        x-agent-context:
          type: object
          additionalProperties: true
    Task:
      type: object
      properties:
        id: { type: string, readOnly: true }
        name: { type: string }
        assignee: { type: string, nullable: true }
        dependencies:
          type: array
          items: { type: string }
        status: { type: string, enum: ["NEW", "IN_PROGRESS", "DONE"] }
    TurnaroundStatus:
      type: object
      properties:
        id: { type: string }
        percentComplete: { type: number }
        criticalPathTasks:
          type: array
          items: { $ref: "#/components/schemas/Task" }
        risks:
          type: array
          items: { type: string }
    ComplianceSummary:
      type: object
      properties:
        workforceValidated: { type: boolean }
        openFindings: { type: integer }
        lastAuditAt: { type: string, format: date-time }
    Error:
      type: object
      required: [code, message]
      properties:
        code: { type: string, example: "VALIDATION_ERROR" }
        message: { type: string, example: "Invalid turnaround ID format" }
        details: { type: object, additionalProperties: true }
        correlationId: { type: string }
    AgentContext:
      type: object
      properties:
        sourceAgent: { type: string, example: "maintenance-agent" }
        targetAgent: { type: string, example: "turnaround-agent" }
        correlationId: { type: string }
        policies: { type: array, items: { type: string } }
        priority: { type: string, enum: ["low", "medium", "high", "critical"] }
paths:
  /health:
    get:
      tags: [Health]
      summary: Health check endpoint
      security: []
      responses:
        "200":
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: "healthy" }
                  timestamp: { type: string, format: date-time }
                  version: { type: string, example: "1.0.0" }
  /turnarounds:
    post:
      tags: [Turnarounds]
      summary: Initiate a turnaround
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/Turnaround" }
      responses:
        "201":
          description: Turnaround created
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Turnaround" }
  /turnarounds/{id}/tasks:
    post:
      tags: [Tasks]
      summary: Add or modify tasks for a turnaround
      parameters:
        - $ref: "#/components/parameters/TurnaroundIdParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items: { $ref: "#/components/schemas/Task" }
      responses:
        "202":
          description: Tasks accepted
  /turnarounds/{id}/status:
    get:
      tags: [Turnarounds]
      summary: Get turnaround status
      parameters:
        - $ref: "#/components/parameters/TurnaroundIdParam"
      responses:
        "200":
          description: Status payload
          content:
            application/json:
              schema: { $ref: "#/components/schemas/TurnaroundStatus" }
  /turnarounds/{id}/compliance:
    get:
      tags: [Compliance]
      summary: Get compliance summary
      parameters:
        - $ref: "#/components/parameters/TurnaroundIdParam"
      responses:
        "200":
          description: Compliance summary
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ComplianceSummary" }
